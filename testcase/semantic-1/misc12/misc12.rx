/*
Test Package: Semantic-1
Test Target: misc
Author: Wenxin Zheng
Time: 2025-08-08
Verdict: Success
Comment: misc test, palindrome number checker
*/

// Palindrome number checker
// Check if a number reads the same forwards and backwards
fn reverse_number(mut n: i32) -> i32 {
    let mut reversed: i32 = 0;
    
    while (n > 0) {
        reversed = reversed * 10 + n % 10;
        n /= 10;
    }
    
    return reversed;
}

fn is_palindrome(n: i32) -> bool {
    if (n < 0) {
        return false;
    }
    
    let reversed: i32 = reverse_number(n);
    return n == reversed;
}

fn count_digits(mut n: i32) -> i32 {
    if (n == 0) {
        return 1;
    }
    
    let mut count: i32 = 0;
    while (n > 0) {
        count += 1;
        n /= 10;
    }
    
    return count;
}

fn main() {
    let n: i32 = getInt();
    
    if (is_palindrome(n)) {
        let digit_count = count_digits(n);
        printInt(1); // Is palindrome
        printInt(digit_count);
    } else {
        printInt(0); // Not palindrome
        printInt(-1);
    }
    exit(0);
}
