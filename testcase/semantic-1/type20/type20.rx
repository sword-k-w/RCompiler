/*
Test Package: Semantic-1
Test Target: type
Author: Wenxin Zheng
Time: 2025-08-08
Verdict: Fail
Comment: Type error: array size mismatch in task queue assignment
*/

// Complete program with type error: array size mismatch in assignment
enum Priority {
    Low,
    Medium,
    High,
}

struct Task {
    id: i32,
    priority: Priority,
    completed: bool,
}

fn initialize_tasks() -> [Task; 3] {
    let task1: Task = Task { id: 1, priority: Priority::High, completed: false };
    let task2: Task = Task { id: 2, priority: Priority::Medium, completed: true };
    let task3: Task = Task { id: 3, priority: Priority::Low, completed: false };
    
    return [task1, task2, task3];
}

fn process_task_queue(tasks: &mut [Task; 3]) {
    let mut i: usize = 0;
    while (i < 3) {
        if !tasks[i].completed {
            // Process incomplete task
        }
        i = i + 1;
    }
}

fn main() {
    let mut task_queue: [Task; 3] = initialize_tasks();
    process_task_queue(&mut task_queue);
    
    // Type error: trying to assign array of different size
    let small_queue: [Task; 3] = task_queue;
    
    printInt(1);
    exit(0);
}
