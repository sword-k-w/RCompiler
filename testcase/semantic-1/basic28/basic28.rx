fn encrypt(input: &[u8; 16], output: &mut [u8; 16], shift: u8) {
    let mut i = 0usize;
    while i < 16 {
        let c = input[i];
        let base = if c >= b'a' && c <= b'z' { b'a' } else if c >= b'A' && c <= b'Z' { b'A' } else { 0 };
        if base != 0 {
            let offset = c - base;
            let new_offset = (offset + shift) % 26;
            output[i] = base + new_offset;
        } else {
            output[i] = c;
        }
        i += 1;
    }
}
fn main() {
    let plaintext: [u8; 16] = *b"HelloRustWorld!";
